name: Build Windows

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  QT_VERSION: 6.9.1
  KF_VERSION: 6.16.0

defaults:
  run:
    shell: pwsh

jobs:
  build-ecm:
    name: 'üöß Build Extra CMake Modules'
    runs-on: 'windows-latest'
    steps:
      - name: 'üì• Check ECM cache'
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: ECM-${{ env.KF_VERSION }}-${{ runner.os }}
          fail-on-cache-miss: false
          lookup-only: true
          path: ecm-prefix
      - name: 'üì• Install Qt'
        if: steps.cache.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          cache: true
      - name: 'üì• Download ECM ${{ env.KF_VERSION }} source'
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest "https://github.com/KDE/extra-cmake-modules/archive/refs/tags/v$env:KF_VERSION.tar.gz" -OutFile "ecm.tar.gz"
          New-Item -ItemType Directory -Path ecm-source -Force | Out-Null
          tar -C ecm-source --strip-components=1 -xvf "ecm.tar.gz"
      - name: '‚öôÔ∏è Configure MSVC'
        uses: ilammy/msvc-dev-cmd@v1
        if: steps.cache.outputs.cache-hit != 'true'
      - name: 'üöß Build and Install ECM'
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cmake -G Ninja -S ecm-source -B ecm-build `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_PREFIX_PATH="$env:QT_ROOT_DIR" `
            -DCMAKE_INSTALL_PREFIX="$pwd\ecm-prefix" `
            -DBUILD_DOC=OFF `
            -DBUILD_TESTING=OFF
          cmake --build ecm-build --parallel
          cmake --install ecm-build
      - name: 'üì§ Save ECM to cache'
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ECM-${{ env.KF_VERSION }}-${{ runner.os }}
          path: ecm-prefix
  buid:
    name: 'üöß Build MEASESaveEditor'
    needs: [build-ecm]
    runs-on: 'windows-latest'
    steps:
      - name: 'üì• Install Qt'
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2022_64
          cache: true
      - name: 'üì• Check ECM cache'
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: ECM-${{ env.KF_VERSION }}-${{ runner.os }}
          fail-on-cache-miss: true
          path: ecm-prefix
      - name: '‚úÖ Checkout repo'
        uses: actions/checkout@v4
        with:
          path: app-source
      - name: '‚öôÔ∏è Configure MSVC'
        uses: ilammy/msvc-dev-cmd@v1
      - name: '‚öôÔ∏è Configure'
        run: |
          cmake -S app-source -B app-build -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_PREFIX_PATH="$pwd\ecm-prefix;$env:QT_ROOT_DIR" `
            -DCMAKE_INSTALL_PREFIX="$pwd\artifacts\MEASESaveEditor"
      - name: 'üöß Build and Install'
        run: |
          cmake --build app-build --parallel
          cmake --install app-build
      - name: 'üì§ Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: MEASESaveEditor
          path: artifacts